{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Yuehan\\\\Desktop\\\\hw1\\\\final-priject\\\\react-movie\\\\src\\\\sortTemp\\\\componment.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport store from './store';\nimport { actions } from './actionCreator';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function ListMove(props) {\n  _s();\n\n  //Watch the status of sort status (asc or desc), default is sort by asc\n  const [sortTitleAsc, setSortTitleAsc] = useState(true);\n  const [sortDateAsc, setSortDateAsc] = useState(true);\n  const [sortCountAsc, setSortCountAsc] = useState(true);\n  const [sortAvgAsc, setSortAvgAsc] = useState(true);\n  useEffect(() => {\n    store.subscribe(() => {\n      console.log(sortAvgAsc);\n\n      switch (store.getState().actionType) {\n        case \"SORTAVG\":\n          console.log(\"Acti\");\n          setSortAvgAsc(!sortAvgAsc);\n          return null;\n\n        case \"SORTCOUNT\":\n          setSortCountAsc(!sortCountAsc);\n          return null;\n\n        case \"SORTTITLE\":\n          setSortTitleAsc(!sortTitleAsc);\n          return null;\n\n        case \"SORTDATE\":\n          setSortDateAsc(!sortDateAsc);\n          return null;\n\n        default:\n          return null;\n      }\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        margin: \"10px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          store.dispatch(actions.sortTitle(sortTitleAsc));\n        },\n        children: [\"Sort by title \", sortTitleAsc ? \" ↑\" : \" ↓\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          store.dispatch(actions.sortDate(sortDateAsc));\n        },\n        children: [\"Sort by date\", sortDateAsc ? \" ↑\" : \" ↓\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          store.dispatch(actions.sortCount(sortCountAsc));\n        },\n        children: [\"Sort by vote count\", sortCountAsc ? \" ↑\" : \" ↓\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          store.dispatch(actions.sortAvg(sortAvgAsc));\n        },\n        children: [\"Sort by vote avg\", sortAvgAsc ? \" ↑\" : \" ↓\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 5\n    }, this), props.movieList.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        border: '2px solid black',\n        margin: \"10px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        alt: \"img\",\n        src: 'https://image.tmdb.org/t/p/w1280' + item.poster_path,\n        height: 200,\n        width: 150\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: item.title\n      }, item.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"relase Date: \", item.release_date]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Vote count: \", item.vote_count]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Vote Average: \", item.vote_average]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true);\n}\n\n_s(ListMove, \"Zu3QhyHCg+xnzV7KYnGE8tpX8lo=\");\n\n_c = ListMove;\n\nvar _c;\n\n$RefreshReg$(_c, \"ListMove\");","map":{"version":3,"names":["React","useState","useEffect","store","actions","ListMove","props","sortTitleAsc","setSortTitleAsc","sortDateAsc","setSortDateAsc","sortCountAsc","setSortCountAsc","sortAvgAsc","setSortAvgAsc","subscribe","console","log","getState","actionType","margin","dispatch","sortTitle","sortDate","sortCount","sortAvg","movieList","map","item","border","poster_path","title","id","release_date","vote_count","vote_average"],"sources":["C:/Users/Yuehan/Desktop/hw1/final-priject/react-movie/src/sortTemp/componment.js"],"sourcesContent":["import React,{useState,useEffect} from 'react';\r\n\r\nimport store from './store';\r\nimport {actions} from './actionCreator';\r\n\r\nexport default function ListMove(props){\r\n\r\n    //Watch the status of sort status (asc or desc), default is sort by asc\r\n    const [sortTitleAsc,setSortTitleAsc] = useState(true)\r\n    const [sortDateAsc,setSortDateAsc] = useState(true)\r\n    const [sortCountAsc,setSortCountAsc] = useState(true)\r\n    const [sortAvgAsc,setSortAvgAsc] = useState(true)\r\n\r\n    useEffect(()=>{\r\n\r\n        \r\n        store.subscribe(()=>{\r\n            console.log(sortAvgAsc)\r\n\r\n            switch(store.getState().actionType){\r\n                case \"SORTAVG\":\r\n                    console.log(\"Acti\")\r\n                    setSortAvgAsc(!sortAvgAsc)\r\n                    return null\r\n                \r\n                case \"SORTCOUNT\":\r\n                    setSortCountAsc(!sortCountAsc)\r\n                    return null\r\n    \r\n                case \"SORTTITLE\":\r\n                    setSortTitleAsc(!sortTitleAsc)\r\n                    return null\r\n        \r\n                case \"SORTDATE\":\r\n                    setSortDateAsc(!sortDateAsc)\r\n                    return null\r\n                default:\r\n                    return null\r\n        \r\n            }\r\n  \r\n\r\n        })\r\n\r\n    },[])\r\n\r\n    return(<>\r\n    <div style={{margin:\"10px\"}}>\r\n            <button onClick={()=>{\r\n                store.dispatch(actions.sortTitle(sortTitleAsc))\r\n            }}>Sort by title {sortTitleAsc?\" ↑\":\" ↓\"}</button>\r\n\r\n\r\n            <button onClick={()=>{\r\n                store.dispatch(actions.sortDate(sortDateAsc))\r\n            }}>Sort by date{sortDateAsc?\" ↑\":\" ↓\"}</button>\r\n\r\n            <button  onClick={()=>{\r\n                store.dispatch(actions.sortCount(sortCountAsc))\r\n            }}>Sort by vote count{sortCountAsc?\" ↑\":\" ↓\"}</button>\r\n\r\n            <button onClick={()=>{\r\n                store.dispatch(actions.sortAvg(sortAvgAsc))\r\n            }}>Sort by vote avg{sortAvgAsc?\" ↑\":\" ↓\"}</button>\r\n        </div>\r\n     \r\n\r\n        {props.movieList.map((item=>\r\n        <div style={{border:'2px solid black',margin:\"10px\"}}>\r\n            <img alt='img' src={'https://image.tmdb.org/t/p/w1280'+item.poster_path} height={200} width={150}></img>\r\n            <div key={item.id}>{item.title}</div>\r\n            <div>relase Date: {item.release_date}</div>         \r\n            <div>Vote count: {item.vote_count}</div>\r\n            <div>Vote Average: {item.vote_average}</div>\r\n        </div>))}\r\n    \r\n    \r\n    </>)\r\n}\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}